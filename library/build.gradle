plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.61'
}

group 'de.difuture.ekut.pht.test'
version '0.0.2'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

configurations {
    ktlint
}

/*
 * Plugins
 */
apply plugin: "java"
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

dependencies {
    ktlint "com.github.shyiko:ktlint:0.28.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'org.testcontainers', name: 'testcontainers', version: '1.8.3'
    compile group: 'io.github.benas', name: 'random-beans', version: '3.7.0'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            version '0.0.2'
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/libs/client-0.0.2.pom")
    }
}

/*
 * Enable source and javadoc for Maven publish
 */

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

/*
 * The Linter
 */
task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
